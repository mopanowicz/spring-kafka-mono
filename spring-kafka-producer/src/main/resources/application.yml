server.port: 8082

management:
  endpoints:
    web.exposure.include: "*"
    jmx.exposure.include: "*"

logging:
  level:
    root: INFO
    com.example: INFO
    com.example.producer.service.EventDeliveryMonitor: DEBUG

event-producer:
  topic: events
  blocking: true
  properties:
    bootstrap.servers: kafka.virtual.box:9092
    client.id: event-producer
    key.serializer: org.apache.kafka.common.serialization.StringSerializer
    value.serializer: org.springframework.kafka.support.serializer.JsonSerializer

event-confirmation-consumer:
  topic: event_confirmations
  properties:
    bootstrap.servers: kafka.virtual.box:9092
    client.id: event-confirmation-consumer
    group.id: event-confirmation-consumer-group
    key.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    value.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
    spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    spring.json.value.default.type: com.example.model.EventConfirmation
    spring.json.trusted.packages: com.example.model
