server.port: 8084

management:
  endpoints:
    web.exposure.include: "*"
    jmx.exposure.include: "*"

logging:
  level:
    root: info
    com.example: info

spring:
  data:
    mongodb:
      uri: mongodb://mongo.virtual.box,mongo2.virtual.box,mongo3.virtual.box/test?primaryPreferred=true&&w=1&wtimeoutMS=5000
#      uri: mongodb://mongonode.virtual.box/test

event-consumer:
  topic: events
  send-confirmation: true
  save-event: true
  properties:
    bootstrap.servers: kafka.virtual.box:9092
    client.id: event-consumer
    group.id: event-consumer-group
    auto.offset.reset: latest
    key.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    value.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
    spring.deserializer.value.delegate.class: io.confluent.kafka.streams.serdes.avro.ReflectionAvroDeserializer
    specific.avro.reader: true
    isolation.level: read_committed
    schema.registry.url: http://confluent.virtual.box:8081
    use.latest.version: true

event-confirmation-producer:
  topic: event_confirmations
  blocking: true
  properties:
    bootstrap.servers: kafka.virtual.box:9092
    client.id: event-confirmation-producer
    key.serializer: org.apache.kafka.common.serialization.StringSerializer
    value.serializer: io.confluent.kafka.streams.serdes.avro.ReflectionAvroSerializer
    schema.registry.url: http://confluent.virtual.box:8081
    use.latest.version: true

---
spring.config.activate.on-profile: tls

server:
  port: 8447
  ssl.key-store: ${KEYSTORE}
  ssl.key-store-type: PKCS12
  ssl.key-store-password: ${KEYSTORE_PASSWORD}
