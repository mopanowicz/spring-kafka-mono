server.port: 8086

management:
  endpoints:
    web.exposure.include: "*"
    jmx.exposure.include: "*"

logging:
  level:
    root: info
    com.example: info

spring:
  data:
    mongodb:
      host: mongonode.virtual.box
      database: test

event-consumer:
  topic: events
  properties:
    bootstrap.servers: kafka.virtual.box:9092
    group.id: event-monitor-group
    key.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    value.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
    spring.deserializer.value.delegate.class: io.confluent.kafka.streams.serdes.avro.ReflectionAvroDeserializer
    specific.avro.reader: true
    isolation.level: read_committed
    schema.registry.url: http://confluent.virtual.box:8081
    use.latest.version: true

event-confirmation-consumer:
  topic: event_confirmations
  properties:
    bootstrap.servers: kafka.virtual.box:9092
    group.id: event-confirmation-monitor-group
    key.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    value.deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
    spring.deserializer.value.delegate.class: io.confluent.kafka.streams.serdes.avro.ReflectionAvroDeserializer
    specific.avro.reader: true
    isolation.level: read_committed
    schema.registry.url: http://confluent.virtual.box:8081
    use.latest.version: true

---
spring.config.activate.on-profile: tls

server:
  port: 8449
  ssl.key-store: ${KEYSTORE}
  ssl.key-store-type: PKCS12
  ssl.key-store-password: ${KEYSTORE_PASSWORD}
